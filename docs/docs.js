function getDocsSource() { return {"basic-login": "# Sign In\n\nLog in to the FounderGPT API using email and password. _Note: to sign up, please contact us at gptfounder@gmail.com as the app is currently invite only._\n\nTakes a username and password, and returns a token that can be used to authenticate future requests like querying FounderGPT and setting up third-party integrations.\n\n### Endpoint\n\nMethod: `POST`  \nURL: `app.foundergpt.com/login`\nAuthentication: No, not required\n\n### Request\n\nType: `JSON`\n\nFields:\n\n-   `email`\n    -   type: `string`\n    -   description: The email of the user.\n-   `password`\n    -   type: `string`\n    -   description: The password of the user.\n\n### Response\n\nType: `JSON`\n\nFields:\n\n-   `success`\n    -   type: `boolean`\n    -   description: Whether the login was successful.\n-   `response`\n    -   type: `string`\n    -   description: Message regarding login success or failure.\n-   `error`\n    -   type: `string`\n    -   description: Error details if any error occurs or login fails.\n-   `user_id`\n    -   type: `string` (UUID)\n    -   description: The user ID of the user.\n-   `token`\n    -   type: `string` (JWT Token)\n    -   description: The token for the user. Save this token for future requests. Needs to be passed into the API endpoints that require authentication.\n", "basic-oauth": "# Add Integrations\n\nAllow FounderGPT to utilize your account in a third-party service (i.e. allow FounderGPT to manage your Google Calendar, Gmail, etc.). Utilizes OAuth 2.0 PKCE flow (learn more [here](https://oauth.net/2/pkce/)). _Please contact us at gptfounder@gmail.com to get help with any questions about authorizing integrations using this flow._\n\nTakes an authorization code, code verifier, and redirect URI after logging into the third-party service via OAuth PKCE, and saves the third-party token to the user's account, allowing FounderGPT to access the third-party service on the user's behalf.\n\n### Endpoint\n\nMethod: `POST`  \nURL: `app.foundergpt.com/auth`\nAuthentication: Yes, required\n\n-   Provide the token (obtained from the sign-in endpoint) in the `Authorization` HTTP header, with typical Bearer token format.\n\n### Request\n\nType: `JSON`\n\nFields:\n\n-   `code`\n    -   type: `string`\n    -   description: The authorization code provided by OAuth (after logging into the third-party service via PKCE flow).\n-   `code_verifier`\n    -   type: `string`\n    -   description: The code verifier generated by your client app (after logging into the third-party service via PKCE flow).\n-   `redirect_uri`\n    -   type: `string`\n    -   description: The redirect URI used by your client app (after logging into the third-party service via PKCE flow).\n\n### Response\n\nType: `JSON`\n\nFields:\n\n-   `success`\n    -   type: `boolean`\n    -   description: Whether the token exchange was successful.\n-   `response`\n    -   type: `string`\n    -   description: Message regarding the success or failure of the token exchange.\n-   `error`\n    -   type: `string`\n    -   description: Error details if any error occurs or token exchange fails.\n", "basic-query": "# Ask Questions\n\nAsk FounderGPT to provide information or complete a task.\n\nTakes a query and returns a response from FounderGPT, after FounderGPT has gathered the information or completed the requested task.\n\n### Endpoint\n\nMethod: `POST`  \nURL: `app.foundergpt.com/query`\nAuthentication: Yes, required\n\n-   Provide the token (obtained from the sign-in endpoint) in the `Authorization` HTTP header, with typical Bearer token format.\n\n### Request\n\nType: `JSON`\n\nFields:\n\n-   `query`\n    -   type: `string`\n    -   description: A natural language question, request for information, or request to complete a task.\n-   `current_time`\n    -   type: `string`\n    -   description: The current time including timezone, in RFC3339 format or this format: `yyyy-MM-dd'T'HH:mm:ssZZZZZ`\n\n### Response\n\nType: `JSON`\n\nFields:\n\n-   `success`\n    -   type: `boolean`\n    -   description: Whether the query was successful.\n-   `response`\n    -   type: `string`\n    -   description: Response from the chatbot, intended to be displayed to the user.\n-   `error`\n    -   type: `string`\n    -   description: Error details if any error occurs or query fails.\n-   `query`\n    -   type: `string`\n    -   description: The original query provided in the request.\n"}; }